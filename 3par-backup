#!/bin/bash
IP=$1
PATTERN=$2
JOBS=${JOBS:-3}
FIRST_LUN=${FIRST_LUN:-100}
CMD=${CMD:-'set -x; dd of=$VV status=progress bs=16M'}

if [ -z "$PATTERN" ]; then
  echo "Usage: $0 <3par> <pattern>"
  exit 1
fi

backup_vvs() {
  IP=$IP HOST=$HOST CMD=$CMD bash -s -- "$@" <<\EOT
    ISCSIPATH=$1
    shift
    for VV in "$@"; do
      LUN=$(basename "$ISCSIPATH")
      # cleanup broken devices (just in case)
      OLD_VVS=$(ssh "3paradm@$IP" showvlun -host "$HOST" </dev/null | awk "\$1 == $LUN && \$NF == \"host\" {print \$2}" )
      for OLD_VV in $OLD_VVS; do
        yes | ssh "3paradm@$IP" removevlun "$OLD_VV" "$LUN" "$HOST"
      done

      yes | ssh "3paradm@$IP" removevv "$VV-backup" 2>/dev/null

      # attach
      yes | ssh "3paradm@$IP" createsv -ro -exp 7d "$VV-backup" "$VV"
      yes | ssh "3paradm@$IP" createvlun "$VV-backup" "$LUN" "$HOST"

      echo "Waiting export $ISCSIPATH for $VV"
      until qemu-img info "$ISCSIPATH" 2>/dev/null; do
        sleep 1
        if [ $((ticker++)) -ge 15 ]; then
          echo "Error: export $ISCSIPATH for $VV is not readable!"
          exit 2
        fi
      done
      echo "Backing up $ISCSIPATH for $VV"
      sleep 1
      nbdcopy -- [ qemu-nbd -r "$ISCSIPATH" ] - | VV=$VV sh -c "$CMD"

      yes | ssh "3paradm@$IP" removevlun "$VV-backup" "$LUN" "$HOST"
      yes | ssh "3paradm@$IP" removevv "$VV-backup"
    done
EOT
}

command -V nbdcopy || exit $?
command -V qemu-img || exit $?

# Initiator name 'iqn.2008-11.org.linux-kvm' harcoded to qemu-img
INITIATORNAME=iqn.2008-11.org.linux-kvm
HOST=qemu-img

# Create host on 3par if not created yet
echo "Creating host qemu-img on 3par"
OUT=$(ssh "3paradm@$IP" createhost -iscsi "$HOST" "$INITIATORNAME" 2>&1)
if [ $? -ne 0 ] && ! echo "$OUT" | grep "already used by host $HOST"; then
  echo "$OUT"
  exit 1
fi

# ---------------------------

PORTALS=$(ssh "3paradm@$IP" showport -iscsivlans | head -n-2 | tail -n+2)
TARGETNAMES=$(ssh "3paradm@$IP" showport -iscsiname | head -n-2 | tail -n+2)
ISCSIPATHS=()

while read PPORT _ PIP _; do
  while read TPORT _ TNAME; do
    if [ "$PPORT" = "$TPORT" ]; then
      ISCSIPATHS+=("iscsi://$PIP/$TNAME")
      continue 2
    fi
  done < <(echo "$TARGETNAMES")
done < <(echo "$PORTALS")

VVS=$(ssh "3paradm@$IP" showvv -showcols Name "$PATTERN" | head -n-2 | tail -n+2 | grep -v '\-backup ')
VVS_WC=$(echo "$VVS" | wc -l)
PORTION="$(($VVS_WC/$JOBS))"

# Set traps to kill background processes
trap "exit" INT TERM
trap "kill 0" EXIT

for i in $(seq 1 $JOBS); do
  LUN=$(($FIRST_LUN+$i-1))
  VVS=$(echo "$VVS" | awk -v COUNT="$JOBS" -v i="$i" '{f=(f%COUNT)+1 ; if (f == i) { print $0 } }')
  ISCSIPATH="${ISCSIPATHS[$(($((i++)) % ${#ISCSIPATHS[@]}))]}/$LUN"
  echo "Starting job: $ISCSIPATH" $VVS
  backup_vvs "$ISCSIPATH" $VVS &
done

wait
